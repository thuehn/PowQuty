#!/bin/ash

TIMEOUT=${1:-60}						# seconds
LOGFILE=${2:-/dev/null}

DAEMON='powqutyd'
PID=`pidof ${DAEMON}`
DIR_OUTPUT="/mnt/sdcard/"
PACKER=""

OUTPUT_FILE_BASENAME="powquty_raw"
OUTPUT_FILE_ON="$(uname -n)-$(date +%Y_%m_%d)"
OUTPUT_FILE_EXT=""
[[ -n "${PACKER}" ]] && OUTPUT_FILE_EXT=".bz2"
OUTPUT_FILE="${DIR_OUTPUT}${OUTPUT_FILE_ON}-${OUTPUT_FILE_BASENAME}.log${OUTPUT_FILE_EXT}"

OFFSET_FILE="/var/run/powcrond.timer"
OFFSET_MIN=60							# seconds
OFFSET_MAX=3600							# seconds

UCI_POWQUTY_DEVICE="powquty.powquty.device_tty"

STDOUT=0
MQTT="10.10.4.5"


random_int()
{
	local start="${1:-0}"
	local end="${2:-60}"

	local seed diff random out

	seed="$( hexdump -n 2 -e '/2 "%u"' /dev/urandom )"
	[ $end -gt 65536 ] && seed=$(( seed * seed ))

	diff=$(( end + 1 - start ))
	random=$(( seed % diff ))
	randomresult=$(( start + random ))
	echo "${randomresult:-$start}"
}

not_modified_for() {
	[[ -f "$1" ]] || { echo "0"; return;  }
	TS_MOD=`stat -c %Y "$1"`
	TS_NOW=`date +%s`
	TS_DIFF=$((TS_NOW - TS_MOD))
	echo "${TS_DIFF}"
}

check() {
	RES=0
	detect_usb_device || RES=$(( RES | 8 ))

	[[ ! -f "${OUTPUT_FILE}" ]] && RES=$(( $RES | 1))	# output missing

	[[ -z "${PID}" ]] && RES=$(( $RES | 2 ))		# daemon not running

	# timeout for last modified date of output?
	TIME_DIFF=$(not_modified_for "${OUTPUT_FILE}")
	[[ $TIME_DIFF -le ${TIMEOUT} ]] || RES=$(( $RES | 4 ))	# timeout!
	return $RES
}

restart() {
	killall -9 "${DAEMON}" 2>/dev/null

	[[ -n "${PACKER}" ]] && ( ${DAEMON} -r | ${PACKER} >> "${OUTPUT_FILE}" 2>/dev/null ) &
	[[ -z "${PACKER}" ]] && ( ${DAEMON} -r >> "${OUTPUT_FILE}" 2>/dev/null ) &
	exit 0
}

on_new_day() {
	if [[ ! -f "${OFFSET_FILE}" ]]; then
		OFFSET=$(random_int ${OFFSET_MIN} ${OFFSET_MAX})
		OFFSET_TOTAL=$(date -d @$(($(date +%s) + $OFFSET)) +%s)
		#echod "new day - created new offset timer with offset $OFFSET (total $OFFSET_TOTAL)"
		echo "${OFFSET_TOTAL}" > ${OFFSET_FILE}

		RESTART_AT=$(date -d @"$OFFSET_TOTAL")	# human readable
		echod "new day - restart pending at ${RESTART_AT}"
	fi
	OFFSET_TOTAL=`cat ${OFFSET_FILE}`
	local OFFSET_DIFF=$(( $OFFSET_TOTAL - $(date +%s) ))
	if [ ${OFFSET_DIFF} -le 0 ]; then
		echod "new day - restarting now"
		rm "${OFFSET_FILE}" 2>/dev/null

		# copy log file
		SRC="/tmp/powquty.log"
		FILE_PREV="$(date -d @$(($(date +%s) - 86400))  +%Y_%m_%d)-$(uname -n)"
		DEST="${DIR_OUTPUT}${FILE_PREV}-powquty.log"
		[[ -f "${SRC}" ]] && [[ ! -f "${DEST}" ]] && cp "${SRC}" "${DEST}" && echod "copied ${SRC} to ${DEST}"

		# write to new file
		restart
	fi
}

detect_usb_device() {
	DEVFOUND=`ls -1 /dev/ttyACM* 2>/dev/null | head -n 1`
	if [ -z "${DEVFOUND}" ]; then
		echod "ttyACM device not available"
		exit 16					# give up..
	fi

	DEVCONF=`uci get "${UCI_POWQUTY_DEVICE}"`
	if [ "${DEVFOUND}" != "${DEVCONF}" ]; then
		uci set ${UCI_POWQUTY_DEVICE}="${DEVFOUND}"
		uci commit
		echod "reconfigured USB device to ${DEVFOUND} (was ${DEVCONF})"
		return 8
	fi
	return 0
}

echod() {
	local MSG_TS="$(date +%s)"
	local MSG_DATE="$(date +'%d.%m.%Y %H:%M:%S')"
	local MSG_HOST="$(uname -n)"
	local TEXT="[$(date +'%d.%m.%Y %H:%M:%S')] $@"
	[[ $STDOUT -ne 0 ]] && echo "$TEXT"
	echo "${TEXT}" >> "${LOGFILE}"
	[[ -n "$MQTT" ]] && mosquitto_pub -t 'measurement/powcrond' -q 0 --quiet -h "${MQTT}" -m "${MSG_TS},${MSG_DATE},${MSG_HOST},$@"
}

check
RES=$?
MSG=""
[[ $(( $RES & 1 )) -eq 1 ]] && MSG="${MSG} [output file missing]"
[[ $(( $RES & 2 )) -eq 2 ]] && MSG="${MSG} [daemon not running]"
[[ $(( $RES & 4 )) -eq 4 ]] && MSG="${MSG} [output timeout]"
[[ $(( $RES & 8 )) -eq 8 ]] && MSG="${MSG} [device changed]"

[[ $RES -eq 1 ]] && on_new_day && exit 0			# if restart is because of a new day,
								# don't try to trigger a normal restart
								# because of a "missing" output file
[[ $RES -ne 0 ]] && echod "restarting:${MSG}" && restart
